# Steps from : https://www.linode.com/docs/guides/deploy-nginx-ingress-on-lke/

# In the domain provider
Nameservers, add the following Nameservers:
ns1.linode.com
ns2.linode.com
ns3.linode.com
ns4.linode.com
ns5.linode.com

# Install the NGINX Ingress Controller

1. helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx

2. helm repo update

3. helm install ingress-nginx ingress-nginx/ingress-nginx

output:
helm install ingress-nginx ingress-nginx/ingress-nginx
NAME: ingress-nginx
LAST DEPLOYED: Sat Mar 30 13:03:49 2024
NAMESPACE: default
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
The ingress-nginx controller has been installed.
It may take a few minutes for the load balancer IP to be available.
You can watch the status by running 
'kubectl get service --namespace default ingress-nginx-controller --output wide --watch'

An example Ingress that makes use of the controller:
  apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    name: example
    namespace: foo
  spec:
    ingressClassName: nginx
    rules:
      - host: www.example.com
        http:
          paths:
            - pathType: Prefix
              backend:
                service:
                  name: exampleService
                  port:
                    number: 80
              path: /
    # This section is only required if TLS is to be enabled for the Ingress
    tls:
      - hosts:
        - www.example.com
        secretName: example-tls

If TLS is enabled for the Ingress, a Secret containing the certificate and key must also be provided:

  apiVersion: v1
  kind: Secret
  metadata:
    name: example-tls
    namespace: foo
  data:
    tls.crt: <base64 encoded cert>
    tls.key: <base64 encoded key>
  type: kubernetes.io/tls


4. kubectl create -f ingress-resource.yaml

   above creates the routing rules.

5. Tear Down  steps:
    kubectl delete service nginx-ingress-controller
    kubectl delete -f ingress-resource.yaml

6. 